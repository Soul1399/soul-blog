@use 'mixins' as m;

$props:
    ("name": width, "percent-alias": wp, "alias": w), 
    ("name": height, "percent-alias": hp, "alias": h),
    ("name": padding, "percent-alias": pp, "alias": p),
    ("name": margin, "percent-alias": mp, "alias": m);

@each $p in $props {
    $name: map-get($p, "name");
    @include m.percent-for($name, map-get($p, "percent-alias"));
    @include m.autozero-for($name, map-get($p, "alias"));
    @if $name == width or $name == height {
        @include m.percent-for('min-' + $name, 'min-' + map-get($p, "percent-alias"));
        @include m.percent-for('max-' + $name, 'max-' + map-get($p, "percent-alias"));
    }
}

$units: pc, ch, em, rem, pt, vw, vh, cm, mm, in;
@for $i from 1 through 100 {
    .vww-#{$i} {
        width: #{$i}vw;
    }
    .p-#{$i}, .p-#{$i}px {
        padding: #{$i}px;
    }
    .m-#{$i}, .m-#{$i}px {
        margin: #{$i}px;
    }

    @each $unit in $units {
        .p-#{$i}#{$unit} {
            padding: #{$i}#{$unit};
        }
        .m-#{$i}#{$unit} {
            margin: #{$i}#{$unit};
        }
    }

    .fsz-#{$i}pt {
        font-size: #{$i}pt;
    }
    .fsz-#{$i}px {
        font-size: #{$i}px;
    }
}

